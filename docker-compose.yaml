x-airflow-common:
  &airflow-common
  build: ./airflow/
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: airflow
    _AIRFLOW_WWW_USER_PASSWORD: airflow
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/scripts:/opt/airflow/scripts
    - ./airflow/logs:/opt/airflow/logs
    - /var/run/docker.sock:/var/run/docker.sock  # ðŸ‘ˆ This gives access to host's Docker
    - ./airflow/mlruns:/opt/airflow/mlruns
    
  user: "50000:0"
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy
#  deploy:
#    resources:
#      limits:
#        cpus: '0.1'
#        memory: 512M
        
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
    restart: always

  redis:
    image: redis:7.2-bookworm
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver --workers 1
    ports:
      - "8080:8080"
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    ports:
      - "5001:5001"  # MLflow UI
    entrypoint: >
      /bin/bash -c "exec mlflow ui --host 0.0.0.0 --port 5001 & exec airflow celery worker"
    restart: always

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/scripts
        chown -R "50000:0" /sources/{logs,dags,scripts}
        exec /entrypoint airflow version
    user: "0:0"
    volumes:
      - ./airflow/:/sources

  fastapi:
    build: ./fastapi/
    command: uvicorn app:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi/logs/:/fastapi/logs/
    depends_on:
      - airflow-worker
    restart: always

volumes:
  postgres-db-volume:
  # shared_volume: